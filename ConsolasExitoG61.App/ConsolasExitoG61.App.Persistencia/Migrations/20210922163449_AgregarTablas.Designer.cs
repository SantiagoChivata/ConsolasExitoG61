// <auto-generated />
using System;
using ConsolasExitoG61.App.Persistencia.AppRepositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ConsolasExitoG61.App.Persistencia.Migrations
{
    [DbContext(typeof(Conexion))]
    [Migration("20210922163449_AgregarTablas")]
    partial class AgregarTablas
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Consola", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Almacenamiento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Marca")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MemoriaRam")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<string>("PrecioVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Referencia")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TipoDisco")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("consola");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Control", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<string>("PrecioVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Tipo")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("control");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Factura", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<int>("Cantidad")
                        .HasColumnType("int");

                    b.Property<int?>("ClienteId")
                        .HasColumnType("int");

                    b.Property<int?>("Consolaid")
                        .HasColumnType("int");

                    b.Property<int?>("Controlid")
                        .HasColumnType("int");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<double>("ValorTotal")
                        .HasColumnType("float");

                    b.Property<double>("ValorUnitario")
                        .HasColumnType("float");

                    b.Property<int?>("VendedorId")
                        .HasColumnType("int");

                    b.Property<int?>("VideoJuegoid")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("Consolaid");

                    b.HasIndex("Controlid");

                    b.HasIndex("VendedorId");

                    b.HasIndex("VideoJuegoid");

                    b.ToTable("factura");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Persona", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Apellidos")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cedula")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Clave")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombres")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Usuario")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("persona");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Persona");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Proveedor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Direccion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Identificacion")
                        .HasColumnType("int");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("proveedor");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Sucursal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("NomSucursal")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("sucursal");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.VideoJuego", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .UseIdentityColumn();

                    b.Property<string>("Fabricante")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Multiplataforma")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PrecioCompra")
                        .HasColumnType("float");

                    b.Property<string>("PrecioVenta")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProveedorId")
                        .HasColumnType("int");

                    b.Property<string>("Version")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("ProveedorId");

                    b.ToTable("videoJuego");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Cliente", b =>
                {
                    b.HasBaseType("ConsolasExitoG61.App.Dominio.Persona");

                    b.Property<string>("Celular")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CodCliente")
                        .HasColumnType("int");

                    b.Property<string>("Telefono")
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Cliente");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Empleado", b =>
                {
                    b.HasBaseType("ConsolasExitoG61.App.Dominio.Persona");

                    b.Property<int>("Cargo")
                        .HasColumnType("int");

                    b.Property<int>("CodEmpleado")
                        .HasColumnType("int");

                    b.Property<int?>("SucursalId")
                        .HasColumnType("int");

                    b.HasIndex("SucursalId");

                    b.HasDiscriminator().HasValue("Empleado");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Consola", b =>
                {
                    b.HasOne("ConsolasExitoG61.App.Dominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Control", b =>
                {
                    b.HasOne("ConsolasExitoG61.App.Dominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Factura", b =>
                {
                    b.HasOne("ConsolasExitoG61.App.Dominio.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId");

                    b.HasOne("ConsolasExitoG61.App.Dominio.Consola", "Consola")
                        .WithMany()
                        .HasForeignKey("Consolaid");

                    b.HasOne("ConsolasExitoG61.App.Dominio.Control", "Control")
                        .WithMany()
                        .HasForeignKey("Controlid");

                    b.HasOne("ConsolasExitoG61.App.Dominio.Empleado", "Vendedor")
                        .WithMany()
                        .HasForeignKey("VendedorId");

                    b.HasOne("ConsolasExitoG61.App.Dominio.VideoJuego", "VideoJuego")
                        .WithMany()
                        .HasForeignKey("VideoJuegoid");

                    b.Navigation("Cliente");

                    b.Navigation("Consola");

                    b.Navigation("Control");

                    b.Navigation("Vendedor");

                    b.Navigation("VideoJuego");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.VideoJuego", b =>
                {
                    b.HasOne("ConsolasExitoG61.App.Dominio.Proveedor", "Proveedor")
                        .WithMany()
                        .HasForeignKey("ProveedorId");

                    b.Navigation("Proveedor");
                });

            modelBuilder.Entity("ConsolasExitoG61.App.Dominio.Empleado", b =>
                {
                    b.HasOne("ConsolasExitoG61.App.Dominio.Sucursal", "Sucursal")
                        .WithMany()
                        .HasForeignKey("SucursalId");

                    b.Navigation("Sucursal");
                });
#pragma warning restore 612, 618
        }
    }
}
